package framgia.co.edu.ftrr.entity;
// Generated Feb 12, 2019 2:57:27 PM by Hibernate Tools 5.1.10.Final

import javax.persistence.*;
import java.util.Date;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Trainees generated by hbm2java
 */
@Entity
@Table(name = "trainees", catalog = "FTRR")
public class Trainee implements java.io.Serializable {

	private Integer id;
	private Level level;
	private User user;
	private String name;
	private String email;
	private Date startedTime;
	private String office;
	private String status;
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	private String language;
	private List<ResultTraining> resultTrainingses;
	private List<ResultInterview> resultInterviewses;
	private User trainer;

	public Trainee() {
	}

	public Trainee(Level level, User user, String name, String email, Date startedTime, String office,
			String status, Date createdAt, Date updatedAt, Date deletedAt, String language,
				   List<ResultTraining> resultTrainingses, List<ResultInterview> resultInterviewses, User trainer) {
		this.level = level;
		this.user = user;
		this.name = name;
		this.email = email;
		this.startedTime = startedTime;
		this.office = office;
		this.status = status;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.language = language;
		this.resultTrainingses = resultTrainingses;
		this.resultInterviewses = resultInterviewses;
		this.trainer = trainer;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "level_id")
	public Level getLevels() {
		return this.level;
	}

	public void setLevels(Level level) {
		this.level = level;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by")
	public User getUsers() {
		return this.user;
	}

	public void setUsers(User user) {
		this.user = user;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "started_time", length = 19)
	public Date getStartedTime() {
		return this.startedTime;
	}

	public void setStartedTime(Date startedTime) {
		this.startedTime = startedTime;
	}

	@Column(name = "office", length = 50)
	public String getOffice() {
		return this.office;
	}

	public void setOffice(String office) {
		this.office = office;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 19)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@Column(name = "language")
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trainees")
	public List<ResultTraining> getResultTrainingses() {
		return this.resultTrainingses;
	}

	public void setResultTrainingses(List<ResultTraining> resultTrainingses) {
		this.resultTrainingses = resultTrainingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trainees")
	public List<ResultInterview> getResultInterviewses() {
		return this.resultInterviewses;
	}

	public void setResultInterviewses(List<ResultInterview> resultInterviewses) {
		this.resultInterviewses = resultInterviewses;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "trainer_id")
	public User getTrainer() {
		return this.trainer;
	}

	public void setTrainer(User trainer) {
		this.trainer= trainer;
	}

}
