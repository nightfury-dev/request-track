package framgia.co.edu.ftrr.entity;
// Generated Feb 12, 2019 2:57:27 PM by Hibernate Tools 5.1.10.Final

import org.hibernate.annotations.UpdateTimestamp;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import javax.persistence.*;
import java.sql.Timestamp;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * TraineeForRequests generated by hbm2java
 */
@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "trainee_for_requests", catalog = "FTRR")
public class TraineeForRequest implements java.io.Serializable {

    private Integer id;
    private Request request;
    private User user;
    private Trainee trainee;
    private Integer status;
    private Timestamp createdAt;
    private Timestamp updatedAt;
    private List<ResultInterview> resultInterviews;
    private FinalResult finalResult;

    public TraineeForRequest() {
    }

    public TraineeForRequest(Request request, User user, Trainee trainee, Integer status, Timestamp createdAt,
                             Timestamp updatedAt, List<ResultInterview> resultInterviews, FinalResult finalResult) {
        this.request = request;
        this.user = user;
        this.trainee = trainee;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.resultInterviews = resultInterviews;
        this.finalResult = finalResult;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "request_id")
    public Request getRequest() {
        return this.request;
    }

    public void setRequest(Request request) {
        this.request = request;
    }


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "trainee_id")
    public Trainee getTrainee() {
        return this.trainee;
    }

    public void setTrainee(Trainee traineeId) {
        this.trainee = traineeId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "updated_by")
    public User getUsers() {
        return this.user;
    }

    public void setUsers(User user) {
        this.user = user;
    }

    @Column(name = "status")
    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }
    
    @Column(name = "created_at", length = 19)
    @CreatedDate
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @Column(name = "updated_at", length = 19)
    @UpdateTimestamp
    public Timestamp getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "traineeForRequest")
    public List<ResultInterview> getResultInterviews() {
        return this.resultInterviews;
    }

    public void setResultInterviews(List<ResultInterview> resultInterviews) {
        this.resultInterviews = resultInterviews;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "traineeForRequests")
    public FinalResult getFinalResults() {
        return this.finalResult;
    }

    public void setFinalResults(FinalResult finalResult) {
        this.finalResult = finalResult;
    }

}
